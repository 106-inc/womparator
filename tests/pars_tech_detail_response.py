import sys
import time
sys.path.insert(0, './../api')
import request as req


response1 = "Список технических требований компании-закупщика к оборудованию:\n\n1. Срок службы оборудования — не менее 20 лет.\n2. Срок непрерывной эксплуатации — не менее 3 лет."
response2 = "Список требований:\n\n1. Оборудование должно быть способно работать в нормальных и номинальных рабочих точках, а также при любых других рабочих условиях, указанных заказчиком.\n2. Оборудование предназначено для работы с легковоспламеняющимися и опасными веществами.\n3. Заказчик должен предоставить данные о дополнительных условиях эксплуатации, таких как перекачивание различных жидкостей и сильно отличающиеся условия. Даже если условия эксплуатации редкие или отличаются для одной партии изделий."
response3 = "Вот возможный список строгих технических требований компании-закупщика к оборудованию:\n\n1. Повышение напора как минимум на 5 % путём:\n\n    * замены рабочего колеса (или колёс) на колесо (или колёса) большего диаметра;\n    * применения сменной проточной части;\n    * увеличения частоты вращения вала регулируемого привода;\n    * установки дополнительной ступени насоса."
response4 = "Список требований к оборудованию:\n\n1. Насосы должны сохранять работоспособность при повышении частоты вращения до максимальной допустимой.\n\n2. Максимальной допустимой частотой вращения считается синхронная частота при максимальной допустимой частоте тока электросети."
response5 = "Список требований компании-закупщика к оборудованию:\n\n1. Центробежные насосы.\n\n2. Герметичные.\n\n3. Для технологического обслуживания.\n\n4. В нефтяной, нефтехимической и газовой промышленности."
response6 = "* Возможность повышения напора на 5 % относительно номинальных параметров.\n\n* Возможность замены рабочего колеса (колёс) на рабочее колесо (колёса) большего диаметра.\n* Возможность применения сменной проточной части.\n* Возможность увеличения частоты вращения вала регулируемого привода.\n* Наличие места под установку дополнительной ступени насоса."

responses = [response1, response2, response3, response4, response5, response6]
for i, res in enumerate(responses):
    points = req.extract_points(res)
    print(f"List of points {i} (len: {len(points)}):")
    for point in points:
        print("-", point)
